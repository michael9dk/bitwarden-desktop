.left-nav {
  order: 1;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: flex-start;
  height: 100%;
  width: 22%;
  min-width: 175px;
  max-width: 250px;
  border-right: 1px solid #000000;

  @include themify($themes) {
    background-color: themed("backgroundColorAlt");
    border-right-color: themed("borderColor");
  }

  .vault-filters {
    scrollbar-gutter: stable;
    padding-bottom: 0;
    padding-right: 5px;
    user-select: none;

    .filter {
      .filter-heading {
        display: flex;
        align-items: center;
        padding-top: 5px;
        padding-bottom: 5px;

        button {
          margin-left: auto;
          background: none;
          border: none;
          @include themify($themes) {
            color: themed("headingButtonColor");
          }

          &:hover,
          &:focus {
            cursor: pointer;

            @include themify($themes) {
              color: themed("headingButtonHoverColor");
            }
          }
        }
      }

      .filter-options {
        margin: 0 0 15px 0;

        .filter-option {
          list-style: none;
          .active {
            @include themify($themes) {
              color: themed("primaryColor");
            }
          }
        }
      }

      // This needs some attention. We should probably be using an index-suffixed class for indentation.
      // This will require some work on the way recursive filter nodes work in the templates.
      $indentation-levels: "ul" 12px -4px 11px, "ul ul" 23px 7px 22px, "ul ul ul" 34px 18px 33px,
        "ul ul ul ul" 45px 29px 44px, "ul ul ul ul ul" 56px 40px 55px,
        "ul ul ul ul ul ul" 67px 51px 66px, "ul ul ul ul ul ul ul" 78px 62px 77px;

      @each $nest-level, $padding-left, $left, $active-left in $indentation-levels {
        #{$nest-level} {
          .filter-option {
            left: $left;
            > a {
              padding-left: $padding-left;
            }
          }
          &.active > a .filter-option {
            .filter-option {
              left: $active-left;
            }
          }
        }
      }

      ul {
        padding: 0;
        margin: 0;

        li {
          &.active {
            margin-left: -15px;
            margin-right: -15px;
            padding-left: 15px;

            a {
              padding-right: 15px;
            }
          }
          a {
            padding: 5px 0;
            display: flex;
            align-items: center;

            @include themify($themes) {
              color: themed("textColor");
            }

            span {
              visibility: hidden;
              margin-left: auto;

              @include themify($themes) {
                color: themed("headingButtonColor");
              }

              &:hover,
              &:focus {
                @include themify($themes) {
                  color: themed("headingButtonHoverColor");
                }
              }
            }

            &:hover,
            &:focus {
              span {
                visibility: visible;
              }
            }
          }

          &.active {
            ul {
              @include themify($themes) {
                color: themed("primaryColor");
              }

              margin-left: -15px;
              margin-right: -5px;
              padding-left: 15px;
              padding-right: 5px;
            }
          }
        }
      }
    }
  }
}

.nav {
  width: 100%;
  height: 55px;
  display: flex;
  .btn {
    width: 100%;
    height: 100%;
    font-size: $font-size-base * 0.8;
    flex: 1;
    border: 0;
    border-radius: 0;
    padding-bottom: 4px;

    &:not(.active) {
      @include themify($themes) {
        background-color: themed("backgroundColorAlt");
      }
    }

    i {
      font-size: $font-size-base * 1.5;
      display: block;
      margin-bottom: 2px;
      text-align: center;
    }
  }
}
